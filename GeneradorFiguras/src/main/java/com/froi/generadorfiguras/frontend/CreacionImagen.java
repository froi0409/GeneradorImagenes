/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.froi.generadorfiguras.frontend;

import com.froi.generadorfiguras.estructuras.ArbolAVL;
import com.froi.generadorfiguras.estructuras.ListaDobleImg;
import com.froi.generadorfiguras.estructuras.ListaDoblementeEnlazada;
import com.froi.generadorfiguras.manejadores.ManejadorPrincipal;
import com.froi.generadorfiguras.nodos.NodoAVL;
import com.froi.generadorfiguras.nodos.NodoListaDobleC;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author froi-pc
 */
public class CreacionImagen extends javax.swing.JFrame {

    private ManejadorPrincipal manejadorPrincipal;
    
    /**
     * Creates new form CreacionImagen
     */
    public CreacionImagen() {
        initComponents();
        this.setLocationRelativeTo(null);
    }
    
    public CreacionImagen(ManejadorPrincipal manejadorPrincipal) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.manejadorPrincipal = manejadorPrincipal;
        System.out.println(manejadorPrincipal.getArbolCapas().getTamaño());
        llenarList();
    }
    
    public void setManejadorPrincipal(ManejadorPrincipal manejadorPrincipal) {
        this.manejadorPrincipal = manejadorPrincipal;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtImagen = new javax.swing.JTextField();
        txtUsuario = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstCapasE = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstCapasAdd = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Usuario:");

        jLabel2.setText("Id de la Nueva Imagen:");

        jScrollPane1.setViewportView(lstCapasE);

        jButton1.setText("Agregar Imagen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(lstCapasAdd);

        jButton2.setText(">>>");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Capas Existentes:");

        jLabel4.setText("Capas a Agregar:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(142, 142, 142)
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtImagen))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int index = lstCapasE.getSelectedIndex();
        if(index != -1) {
            DefaultListModel model = (DefaultListModel) lstCapasE.getModel();
            String objeto = (String) model.getElementAt(index);
            model.remove(index);
            
            DefaultListModel model2 = (DefaultListModel) lstCapasAdd.getModel();
            model2.addElement(objeto);
           
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String usuario = txtUsuario.getText();
        String idImagen = txtImagen.getText();
        if(idImagen.contains(" ")) {
            JOptionPane.showMessageDialog(null, "El id de la imagen no puede contener espacios");
        } else if(idImagen.equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese un nombre para el id de la imagen");
        } else {
            ListaDoblementeEnlazada listaCapas = new ListaDoblementeEnlazada();
            DefaultListModel model = (DefaultListModel) lstCapasAdd.getModel();
            try {
                for(int i = 0; i < model.getSize(); i++) {
                    String capa = (String) model.getElementAt(i);
                    NodoAVL capaBuscada;
                    if((capaBuscada = manejadorPrincipal.getArbolCapas().buscar(capa)) != null) {
                        listaCapas.insertar(capaBuscada);
                    } else {
                        JOptionPane.showMessageDialog(null, "Ocurrió un Problema al insertar la capa " + capa);
                        return;
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Problema al insertar capas: " + e.getMessage());
            }
            
            try {
                NodoAVL usuarioManejado;
                if((usuarioManejado = manejadorPrincipal.getArbolUsuarios().buscar(usuario)) != null) {
                    ListaDobleImg listaUsuario = (ListaDobleImg) usuarioManejado.getContenido();
                    manejadorPrincipal.getListaImagenes().insertar(idImagen, listaCapas);
                    NodoListaDobleC nodoImagen = manejadorPrincipal.getListaImagenes().buscar(idImagen);
                    listaUsuario.insertar(nodoImagen);
                    JOptionPane.showMessageDialog(null, "Se agrego la imagen con éxito");
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "No existe el usuario " + usuario);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al intentar insertar la imagen: " + idImagen + ": " + e.getMessage());
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreacionImagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreacionImagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreacionImagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreacionImagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreacionImagen().setVisible(true);
            }
        });
    }

    public void llenarList() {
        ListaDoblementeEnlazada listaAuxiliar = new ListaDoblementeEnlazada();
        manejadorPrincipal.getArbolCapas().llenarListaDobleList(listaAuxiliar);
        DefaultListModel model = new DefaultListModel();
        for(int i = 0; i < listaAuxiliar.getTamaño(); i++) {
            model.addElement(listaAuxiliar.buscar(i).getIdentificador());
        }
        lstCapasE.setModel(model);
        DefaultListModel model2 = new DefaultListModel();
        lstCapasAdd.setModel(model2);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> lstCapasAdd;
    private javax.swing.JList<String> lstCapasE;
    private javax.swing.JTextField txtImagen;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
